issue,title,primary finding,validator comment,status,root cause (URL),size,robotLabel
validation-226,Memory can still be charged for even if there is no expansion,validation-226,off-by-one error while MemoryExpansion at L88,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/gas.cairo#L88,18,:robot:_primary
validation-225,Current memory length is computed incorrectly inside `calculate_gas_extend_memory`,validation-225,another off-by-one error while MemoryExpansion at L87,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/gas.cairo#L87,19,:robot:_08_group
validation-213,No way to cancel l1 -< l2 messages ,findings-36,dup of findings-36,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/697100af34444b3931c18596cec56c454caf28ed/src/kakarot/kakarot.cairo#L370,19,:robot:_09_group
validation-217,Nonce is incorrectly set for reverted create txs ,validation-217,caller's Nonce is wrongly increased during contract create() while balance not enough,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L1024,20,:robot:_59_group
validation-191,Precompiles that go out of gas still contain returndata,validation-191,Should not return data while Precompile calls run out of gas,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L94-L100,20,:robot:_14_group
validation-176,Selfdestruct opcode transfers ETH to the wrong address,validation-176,inconsistent usage of ETH burn addess,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/instructions/system_operations.cairo#L832,20,:robot:_13_group
validation-161,All ether is removed from selfdestructed contracts at the end of the transaction ,validation-161,Funds received after selfdestruct should be burned or kept?,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/backend/starknet.cairo#L189-L201,21,:robot:_13_group
validation-224,Infinite mint by invoking `handle_l1_message` with an account with insufficient balance,findings-30,dup of findings-30,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L950,26,:robot:_primary
validation-93,Malicious Starknet contract entered via Cairo precompile can replay legitimate transactions,findings-64,dup of findings-64,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/accounts/account_contract.cairo#L333,31,:robot:_62_group
validation-237,Insufficient check on s-value can cause signature malleability,findings-13,"Valid but QA at most, as signatures are not used for checking unique of message",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/signature.cairo#L10-L35,37,:robot:_33_group
findings-57,Kakarot's write_account_bytecode external function leaves stale valid jumpdests,findings-57,Admin's manual call of write_account_bytecode()causes mismatch of jumpdest and bytecode,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/kakarot.cairo#L299,38,:robot:_primary
findings-15,DualVMToken@totalSupply does not account for the high part total_supply ,findings-61,dup of findings-61,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/CairoPrecompiles/DualVmToken.sol#L80-L83,39,:robot:_41_group
validation-261," In exec_create, if unable to transfer value, evm should be returned, not child_evm",validation-261,should return current evm rather than child evm while caller's balance is not enough,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/instructions/system_operations.cairo#L197,42,:robot:_primary
findings-55,Users can permanently lose funds when L1->L2 messages fail to process,findings-36,dup of findings-36,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/697100af34444b3931c18596cec56c454caf28ed/src/kakarot/kakarot.cairo#L370,42,:robot:_primary
findings-38,Kakarot precompiles can be abused by malicious contracts by delegate-calling whitelisted contracts,findings-38,"In cairo precompile call, protection by whitelist caller_code_address is not secure ",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/precompiles/precompiles.cairo#L135,43,:robot:_34_group
findings-36,"In edge cases, user might lose funds when sending l1 to l2 messages due to flaw in L1KakarotMessaging.sol",findings-36,Missing retry mechanism while L1 to L2 message failed,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/697100af34444b3931c18596cec56c454caf28ed/src/kakarot/kakarot.cairo#L370,43,:robot:_primary
validation-163,Insufficient Input Validation for evm_address in compute_starknet_address,validation-163,"Valid but QA, no proof how this would cause H or M issues",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/account.cairo#L520,45,:robot:_12_group
findings-32,Incorrect totalsupply value will be returned due to erroneous return data decode implementation,findings-61,dup of findings-61,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/CairoPrecompiles/DualVmToken.sol#L80-L83,45,:robot:_primary
validation-173,Lack of Validation on evm_address in Account Functions,validation-163,dup of validation-163,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/account.cairo#L520,46,:robot:_primary
validation-275,"In L1KakarotMessaging, address alias is applied to all addresses leading to DoS in Kakarot EVM. ",findings-25,name alias for EOA is not needed,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/L1L2Messaging/L1KakarotMessaging.sol#L35,47,:robot:_05_group
validation-216,Cross-chain `sendMessageToL2` using bridge might fail due to not checking the msg.value passed by the users.,findings-36,dup of findings-36,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/697100af34444b3931c18596cec56c454caf28ed/src/kakarot/kakarot.cairo#L370,47,:robot:_primary
findings-63,"Kakarot precompiles can be called in a staticcall context, allowing writes in view functions",findings-63,state modification in static call should be avoided,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/precompiles/precompiles.cairo#L140,47,:robot:_34_group
findings-52,DualVmToken allows moving native balance with zero-value EVM calls,findings-52,It's a realistic attack path with common use cases,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/CairoPrecompiles/DualVmToken.sol#L250,47,:robot:_23_group
findings-64,Reentrancy check in account_contract can be easily circumvented,findings-64,"Along with the issue findings-38, the attack path looks possible",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/accounts/account_contract.cairo#L333,49,:robot:_62_group
validation-200,Potential Reentrancy Vulnerability in execute_starknet_call() and eth_send_transaction(),findings-64,dup of findings-64,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/accounts/account_contract.cairo#L333,52,:robot:_26_group
findings-56,L1 bridge messages can be lost due to unnecessary gas fee collection on Kakarot,findings-30,dup of findings-30,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L950,52,:robot:_09_group
validation-219,Execution gas price is fixed.,findings-30,dup of findings-30,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L950,53,:robot:_primary
findings-62,Kakarot's p256Verify implementation can return false negatives,findings-62,The PoC looks valid,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/precompiles/p256verify.cairo#L49,56,:robot:_primary
findings-34,"Transaction revert handling diverges from EVM spec, whenever EVM to Starknet contract call is involved.",findings-49,dup of findings-49,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/accounts/account_contract.cairo#L347,57,:robot:_23_group
findings-59,Incorrect L1 address aliasing prevents EOAs from operating their L2 wallets,findings-25,dup of findings-25,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/L1L2Messaging/L1KakarotMessaging.sol#L35,58,:robot:_05_group
validation-264,"`decode_legacy_tx` allows validation of signatures with chain_id that are larger than felt, and overflows",validation-264,Its possible for users to pass such invalid data,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/eth_transaction.cairo#L72,59,:robot:_primary
validation-150,Lack of Validation for r and s in ec_recover Precompile Allows Signature Forgery and Denial of Service,findings-13,dup of findings-13,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/signature.cairo#L10-L35,59,:robot:_primary
findings-65,`ExponentiationImpl::pow()` returns 0 for 0^0,findings-65,"0^0 should be 1, the EVM is correctly implemented as is",Satisfactory,https://github.com/kkrt-labs/kakarot-ssj/blob/d4a7873d6f071813165ca7c7adb2f029287d14ca/crates/utils/src/math.cairo#L42,59,:robot:_120_group
findings-68,handle_l1_message allows l2 tx to exceeds globally set block limit and diverges from EIP-1559,findings-30,dup of findings-30,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L950,60,:robot:_22_group
validation-126,Address aliasing should not applied to EOA account,findings-25,dup of findings-25,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/L1L2Messaging/L1KakarotMessaging.sol#L35,63,:robot:_05_group
validation-120,intrinsic gas consumption lack of error handling,validation-120,"Valid QA, as subtraction underflow in cairo would not cause panic",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L923,63,:robot:_39_group
findings-51,Return value of ERC-20 operations is not checked,findings-51,"As a library for common use, it should strictly obey the ERC20 rule and check the returns",Satisfactory,"https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/CairoPrecompiles/DualVmToken.sol#L269,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/CairoPrecompiles/DualVmToken.sol#L353",66,:robot:_primary
validation-192,Out-of-Bounds Read in parse_storage_keys Function,validation-192,"The issue is indeed existing, but Insufficient proof that it would cause H severity as the report says",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/eth_transaction.cairo#L313,68,:robot:_02_group
validation-133,Unchecked External Call Success in execute_starknet_call and exec_precompile May Lead to Unexpected Behavior and Reentrancy Attacks,findings-64,dup of findings-64,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/accounts/account_contract.cairo#L333,70,:robot:_62_group
findings-24,execute_from_outside might return incorrect return_data_len,findings-24,Its better to return data with original length,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/accounts/library.cairo#L231,70,:robot:_primary
validation-211,execute_starknet_call can be used for reentrant attacks,findings-64,dup of findings-64,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/accounts/account_contract.cairo#L333,71,:robot:_primary
validation-91,"Missing balance check in handle_l1_message leads to underflow,  inflating the balance of the transaction sender",findings-30,dup of findings-30,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L950,71,:robot:_22_group
findings-61,Incorrect decoding of supply in DualVmToken,findings-61,total supply shoube be decoded as two uint128,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/CairoPrecompiles/DualVmToken.sol#L80-L83,71,:robot:_41_group
validation-121,Lack of error handling for token transfer,validation-121,Lack of error handling after add_transfer() fee to coinbase,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L1035,72,:robot:_primary
validation-59,Unauthorized Contracts Can Bypass Precompile Authorization via delegatecall in Kakarot zkEVM,findings-38,dup of findings-38,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/precompiles/precompiles.cairo#L135,73,:robot:_primary
findings-47,"In handle_l1_message flow, L1 sender with 0 ETH balance might either avoid paying EVM gas, or causing unhandled EVM reverts",findings-30,dup of findings-30,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L950,73,:robot:_22_group
validation-233,Unbounded Payload Size in L2 to L1 Communication Enables Gas Exhaustion Attacks and Unprocessable Messages,validation-233,"QA, as this type of attack only affects the sender self, other users' message will not be affected",Satisfactory,https://github.com/kkrt-labs/kakarot-lib/blob/c2c7cb400f85c3699a6902946bcf4428d5b4fc61/src/CairoLib.sol#L185,74,:robot:_primary
validation-187,Address aliasing is wrongfully applied even to EOAs,findings-25,dup of findings-25,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/L1L2Messaging/L1KakarotMessaging.sol#L35,74,:robot:_05_group
findings-49,Account contract does not gracefully handle panics in called contracts,findings-49,"Sponsors should have been aware of this issue, but not found in readme of the out of scope section",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/accounts/account_contract.cairo#L347,74,:robot:_primary
validation-90,Insufficient input validation in ETH transaction decoder allows for manipulation of relative jump offset,validation-90,"While decoding, not all felt type data is limited in range [0, 255)",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/eth_transaction.cairo#L244-L268,78,:robot:_11_group
findings-67,Arbitrary jump destinations can be appended to contract accounts,findings-67,The teminated i should be strictly the code length,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/utils.cairo#L938,79,:robot:_65_group
findings-42,Return value of `transfer` and `transferFrom` not checked in `DualVmToken` contract,findings-51,dup of findings-51,Satisfactory,"https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/CairoPrecompiles/DualVmToken.sol#L269,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/CairoPrecompiles/DualVmToken.sol#L353",79,:robot:_primary
validation-195,Users lose out on their funds if they self-destruct in the same tx,validation-161,dup of validation-161,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/backend/starknet.cairo#L189-L201,81,:robot:_primary
findings-50,RIPEMD-160 precompile yields wrong hashes for large set of inputs due to off-by-one error,findings-50,off-by-one error,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/a4c45215f7fd5cdd9fbbfd11196a9a787c6468df/cairo_zero/kakarot/precompiles/ripemd160.cairo#L455,82,:robot:_primary
findings-40,"Calls to the RIPEMD160 precompile can result in RPC-level reverts, bricking contracts",findings-21,mismatch binding of dict start and end,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/precompiles/ripemd160.cairo#L477,84,:robot:_48_group
findings-30,"Silent underflow in interpreter::execute inflates cached balance, causing unhandled revert, EVM gas will be undercharged",findings-30,L1 to L2 call can lead balance underflow,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L950,86,:robot:_22_group
findings-26,"Underconstrained hints in initailize_jumpdests, risk of manipulation of valid_jumpdests",findings-67,dup of findings-67,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/utils.cairo#L938,86,:robot:_primary
findings-48,`DualVmToken` can be abused to cause RPC-level reverts by revoking native token approval to Kakarot,findings-48,The attack path is possible,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/CairoPrecompiles/DualVmToken.sol#L210,91,:robot:_primary
findings-54,Non-finalized dictionary in RIPEMD160 allows forging of output,findings-21,The PoC looks valid,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/precompiles/ripemd160.cairo#L477,93,:robot:_primary
validation-238,Underpaid Computation Attack Through Access List Manipulation,validation-192,Dup of validation-192,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L922-L930,97,:robot:_17_group
findings-37,"Invalid range check for block_number arg causes unhandled cairo tx panics, deviating from EVM behaviors",findings-37,Call BLOCKHASH for the 10 most recent blocks should return 0 rather than revert,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/instructions/block_information.cairo#L167,97,:robot:_21_group
findings-29,"handle_l1_message may unfairly revert l2 tx with sufficient l1 sender balance, due to vulnerable fee charge implementation",findings-30,dup of findings-30,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L950,99,:robot:_22_group
findings-25,Actors need to maintain two Kakarot accounts for L1 to L2 messaging,findings-25, EOA is aliased when sengding messages from L1 to L2,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/L1L2Messaging/L1KakarotMessaging.sol#L35,100,:robot:_primary
validation-244,Incorrect SIGNEXTEND Opcode Input Validation,validation-244,mismatch with geth on the edge case,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/uint256.cairo#L317,101,:robot:_primary
validation-128,Malicious user can revoke native ERC20 token allowance to trigger unhandled panic when the code commits the state.,findings-48,dup of findings-48,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/solidity_contracts/src/CairoPrecompiles/DualVmToken.sol#L210,105,:robot:_primary
findings-39,Underconstrained output in `felt_to_bytes_little()` allows contract deployments to incorrect addresses,findings-39,"PoC looks valid, but have doubt why the check on L100-101 not working",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/bytes.cairo#L80,106,:robot:_primary
validation-64,Missing Check for Scalar Validity in ec_mul.cairo,validation-64,"as the report shows, it' s better to have a check parameters no more than the group order",Satisfactory,https://github.com/kkrt-labs/kakarot-ssj/blob/d4a7873d6f071813165ca7c7adb2f029287d14ca/crates/evm/src/precompiles/ec_operations/ec_mul.cairo#L54,108,:robot:_primary
validation-79,Missing Constraint in default_dict_copy,validation-79,dict finalize missing,Satisfactory,"https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/account.cairo#L83,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/dict.cairo#L83",109,:robot:_primary
validation-88,The Interpreter.execute function does not judge the return value of State.add_transfer,validation-121,dup of validation-121,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L1035,111,:robot:_primary
validation-239,Precompile Execution Without Sufficient Gas In Kakarot,validation-239,"Similar to validation-238, gas charged after execution",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L79-L100,112,:robot:_primary
validation-138,Incorrect ByteArray can be deserialized,validation-138,"mismatch implementation and doc, need sponsor's input to check if its a issue or not",Satisfactory,https://github.com/kkrt-labs/kakarot-lib/blob/c2c7cb400f85c3699a6902946bcf4428d5b4fc61/src/CairoLib.sol#L220,112,:robot:_07_group
validation-188, `pow()` doesn't correctly handle `0^0`,findings-65,dup of findings-65,Satisfactory,https://github.com/kkrt-labs/kakarot-ssj/blob/d4a7873d6f071813165ca7c7adb2f029287d14ca/crates/utils/src/math.cairo#L42,114,:robot:_primary
validation-236,Mitigating Caller Address Risks in StarkNet’s `eth_send_transaction` Function,validation-236,"directly calling eth_send_transaction() would revert due to address binding check, but it's a good pratice to check and return early, maybe QA is proper.",Satisfactory,"https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/eth_rpc.cairo#L203,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/eth_rpc.cairo#L313",116,:robot:_25_group
validation-157,Kakarot's cross chain messages can't get cancelled,findings-36,dup of findings-36,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/697100af34444b3931c18596cec56c454caf28ed/src/kakarot/kakarot.cairo#L370,116,:robot:_09_group
validation-241,Exponential Redundant Calculations in `uint256_fast_exp` used for EXP opcode,findings-2,Redundant calculations obviously increase starknet execution steps,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/uint256.cairo#L369,118,:robot:_105_group
validation-269,L1 -> L2 messages do not have a balance check leading to balance overflow,findings-30,dup of findings-30,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L950,124,:robot:_22_group
validation-240,SDIV Opcode Performs Unnecessary SMOD Computation Despite Only Needing Division,validation-240,Valid QA,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/instructions/stop_and_math_operations.cairo#L198,124,:robot:_primary
validation-202,Underconstrained Hints in load_bytecode Function Allow Bytecode Manipulation,validation-202,Looks valid,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/b8f5f2a20bd733cc8885c010291885e1df7dc50e/cairo_zero/utils/utils.cairo#L959-L1063,126,:robot:_03_group
validation-57,Lack of verification for Invalid Points (Subgroup Checks) for coordinates can brick elliptic curve operations,validation-57,Missing sub group check,Satisfactory,"https://github.com/kkrt-labs/kakarot-ssj/blob/d4a7873d6f071813165ca7c7adb2f029287d14ca/crates/evm/src/precompiles/ec_operations/ec_add.cairo#L78,https://github.com/kkrt-labs/kakarot-ssj/blob/d4a7873d6f071813165ca7c7adb2f029287d14ca/crates/evm/src/precompiles/ec_operations/ec_add.cairo#L90,https://github.com/kkrt-labs/kakarot-ssj/blob/d4a7873d6f071813165ca7c7adb2f029287d14ca/crates/evm/src/precompiles/ec_operations/ec_add.cairo#L104,https://github.com/kkrt-labs/kakarot-ssj/blob/d4a7873d6f071813165ca7c7adb2f029287d14ca/crates/evm/src/precompiles/ec_operations/ec_mul.cairo#L66,https://github.com/kkrt-labs/kakarot-ssj/blob/d4a7873d6f071813165ca7c7adb2f029287d14ca/crates/evm/src/precompiles/ec_operations.cairo#L22",138,:robot:_15_group
findings-3,Opcode `BLOCKHASH` for last 10 block numbers make starkent transaction revert,findings-37,dup of findings-37,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/instructions/block_information.cairo#L167,138,:robot:_primary
validation-193,Out-of-Bounds Read in `parse_access_list` Function,validation-192,dup of validation-192,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/eth_transaction.cairo#L313,140,:robot:_02_group
validation-230,Unchecked Memory Access and Integer Overflow Risks Lead to Arbitrary Memory Corruption,validation-232,dup of validation-232,Satisfactory,https://github.com/kkrt-labs/kakarot-lib/blob/c2c7cb400f85c3699a6902946bcf4428d5b4fc61/src/CairoLib.sol#L203,151,:robot:_00_group
validation-109,Failure in Transaction Execution Due to Incorrect Caller Verification in `eth_send_raw_unsigned_tx` and `execute_from_outside` functions,validation-236,dup of validation-236,Satisfactory,"https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/eth_rpc.cairo#L203,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/eth_rpc.cairo#L313",151,:robot:_25_group
validation-98,RIPEMD160 precompile crashes with a Cairo exception for some input lengths,findings-21,dup of findings-21,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/precompiles/ripemd160.cairo#L477,158,:robot:_48_group
validation-47,Missing enforcement of Lower s Value allows for signature malleability,findings-13,dup of findings-13,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/signature.cairo#L10-L35,166,:robot:_primary
findings-35,Wrong RIPEMD-160 hash when (input length & 63) is exactly 55,findings-50,dup of findings-50,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/a4c45215f7fd5cdd9fbbfd11196a9a787c6468df/cairo_zero/kakarot/precompiles/ripemd160.cairo#L455,174,:robot:_primary
validation-232,Unvalidated Word Alignment and Boundary Checks Allow Memory Corruption Through Misaligned Data Access,validation-232,Missing sound Memory address overflow and security check,Satisfactory,https://github.com/kkrt-labs/kakarot-lib/blob/c2c7cb400f85c3699a6902946bcf4428d5b4fc61/src/CairoLib.sol#L203,191,:robot:_primary
validation-231,Missing Length Verification Between Computed and Actual Data Size Enables Memory Corruption,validation-232,dup of validation-232,Satisfactory,https://github.com/kkrt-labs/kakarot-lib/blob/c2c7cb400f85c3699a6902946bcf4428d5b4fc61/src/CairoLib.sol#L203,196,:robot:_07_group
validation-110,Prover can cheat in felt_to_bytes_little due to value underflow,findings-39,dup of findings-39,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/bytes.cairo#L80,197,:robot:_03_group
findings-14,EXP can make VM run out of resources,findings-2,dup of findings-2,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/uint256.cairo#L369,198,:robot:_primary
findings-2,Opcode `EXP` for large even number can make starkent transaction revert due to running out of steps,findings-2,EXP Redundant calculations obviously increase starknet execution steps,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/uint256.cairo#L369,200,:robot:_primary
findings-5,Blockhash revert issue in last 10 blocks,findings-37,dup of findings-37,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/instructions/block_information.cairo#L167,203,:robot:_primary
validation-242,Event Limit Attack: Free Transaction Execution Due to Starknet Event Limit,validation-242,A specific case of findings-19,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/state.cairo#L344,209,:robot:_primary
findings-23,JUMP and JUMPI fail when the offset is invalid but still within the currently created contract bytecode length,findings-44,dup of findings-44,Satisfactory,"https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/evm.cairo#L277,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/evm.cairo#L364",210,:robot:_65_group
findings-9,Missing enforcment of valid `r` range in `ecrecover`,findings-13,dup of findings-13,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/signature.cairo#L10-L35,218,:robot:_67_group
validation-114,"During transaction signature verification, the chain id is not verified to be empty",validation-114,chain id forgry,Satisfactory,"https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/eth_rpc.cairo#L250,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/accounts/library.cairo#L171",225,:robot:_primary
findings-6,Selfdestructing to itself during creation transaction doesn't burn tokens like on Ethereum,findings-6,"It's indeed a difference with geth, but on starknet there is no equivalent way to burn native token",Satisfactory,"https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/instructions/system_operations.cairo#L788,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/backend/starknet.cairo#L195",230,:robot:_13_group
findings-19,Opcodes consuming a lot of steps at the cost of few gas can be exploited,findings-19,It's good to adjust some OPcode's gas to make it tuned for starknet steps cost,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L50,235,:robot:_primary
findings-44,Jump in creation code leads to reverting of the starknet transaction,findings-44,Zero address used as coder address while creating new contract,Satisfactory,"https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/evm.cairo#L277,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/evm.cairo#L364",237,:robot:_primary
findings-13,Three valid signatures for the same message,findings-13,"Valid but QA at most, as signatures are not used for checking unique of message",Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/utils/signature.cairo#L10-L35,244,:robot:_primary
findings-11,Handling leftover balances during selfdestruct differs from Ethereum,findings-6,dup of findings-6,Satisfactory,"https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/instructions/system_operations.cairo#L788,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/backend/starknet.cairo#L195",255,:robot:_13_group
findings-20,Gas charged after computation for precompiles may lead to running out of steps,validation-239,dup of validation-239,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L79-L100,256,:robot:_primary
findings-21,`RIPEMD160` fails if `(length of calldata) % 64` is in the range of 55 to 63,findings-21,Incorrect processing of edge case,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/precompiles/ripemd160.cairo#L477,285,:robot:_primary
findings-8,"Unauthorized calls to Cairo precompiles cause system panic, providing attack opportunities",findings-8,Difference with geth,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L1008,349,:robot:_14_group
findings-10,Incorrect state for accounts without code and nonce,findings-10,Edge case of code hash is not been commited,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/backend/starknet.cairo#L203,388,:robot:_primary
findings-4,Incorrect calculation in `Gas::max_memory_expansion_cost` for high offset zero size argument,findings-4,the edge case of size=0 is not processed correctly,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/gas.cairo#L140,485,:robot:_primary
findings-18,Loading whole bytecode in memory can lead to running out of steps even using limited gas,findings-18,A specific case of findings-19,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/accounts/library.cairo#L486,646,:robot:_20_group
validation-185,Origin and extra precompiles are not warmed up when preparing a transaction,,They are warmed at L915-920 of interpreter.cairo,Unsatisfactory,,18,:robot:_primary
validation-48, Lack of Access Control on deploy Function,,"Access Control on deploy is not essential, as attackers without the private key can not send any transaction from these deployed account contracts",Unsatisfactory,,19,
validation-162,Authorized pre eip155 txs will revert ,,"After RLP decode of pre EIP155 tx, tx.chain_id.is_some == FALSE, the revert would not be triggered",Unsatisfactory,,20,:robot:_primary
validation-36,Using uninitialized variables. Uninitialized variables can lead to unpredictable behavior of the program or execution errors.,,Insufficient quality,Unsatisfactory,,20,
validation-276,Overflow in Cairo's PRIME Field could result in incorrect outputs that violate the function’s assumptions.,,Insufficient quality,Unsatisfactory,,22,:robot:_primary
validation-186,Nonce is not set properly during create transaction if initcode exceeds max size ,,"The equivalent initcode check of Ethereum is at https://github.com/ethereum/go-ethereum/blob/65e5ca7d8126f7a8c708f8affb64f16c22cc63c0/core/vm/gas_table.go#L318, which is before increasing nonce. Actually, the report is related to returncode length check, which is at https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/instructions/system_operations.cairo#L1280",Unsatisfactory,,22,:robot:_59_group
validation-177,Incorrect gas accounting in create function causes excess gas to be refunded ,,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,22,:robot:_72_group
validation-160,Interpreter does not charge gas if the max code size is exceeded ,,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,22,:robot:_30_group
validation-274,"Out-of-Range div Value might result in incorrect calculations or potential data corruption, depending on Cairo’s error-handling.",,Insufficient quality,Unsatisfactory,,23,:robot:_79_group
validation-248,"Denial of Service via Access List Parsing can lead to system downtime, inability to process legitimate transactions",,Access List gas are charged to protect this type of attack,Unsatisfactory,,25,:robot:_146_group
validation-220,Reverted txs in root ctx do not give refunds ,,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,25,:robot:_primary
validation-208,"Unchecked Inputs and Malformed Data can lead to Crashes, DoS, or incorrect execution",,Insufficient proof,Unsatisfactory,,25,:robot:_primary
validation-58,Incorrect Function Name,,Invalid proof,Unsatisfactory,,25,:robot:_primary
validation-10,Missing Input Validation on tx_type,,Insufficient proof,Unsatisfactory,,25,:robot:_11_group
findings-60,Prevrandao opcode does not follow the Ethereum spec,,"As design, Prevrandao is set by offchain with set_prev_randao()",Unsatisfactory,,25,:robot:_primary
validation-268,"Throughout the codebase, kakarot instructions deals with uint128 offset values, but geth deals with uint64 values.",,No specific attack path or vulnerability provided,Unsatisfactory,,26,:robot:_primary
validation-263,"Division by Zero could result in a runtime failure or revert the transaction, leading to potential denial-of-service scenarios.",,No specific case when the caller would pass div with zero,Unsatisfactory,,26,:robot:_primary
validation-257, Duplicate `Event` Definitions,,Invalid,Unsatisfactory,,26,:robot:_primary
validation-247,Replay Attacks Across Networks can lead to potential fund loss,,The design that EIP-155 txn need to be authorised is used to protect this type of attack,Unsatisfactory,,26,:robot:_primary
validation-50,Inconsistency in storage updates due to cached keys,,Invalid proof,Unsatisfactory,,26,
validation-206,Missing Fallback for staticcallCairo which can cause the transaction to fail unexpectedly without clear error handling. ,,Invalid proof,Unsatisfactory,,27,:robot:_primary
validation-279,Incompatibility with Smart Contract Account Signatures in Kakarot,,Design choice rather than an issue,Unsatisfactory,,28,:robot:_primary
validation-251,"Reentrancy Attacks causing state locking, check-effects-interactions pattern",,Insufficient proof,Unsatisfactory,,28,:robot:_primary
validation-205,"Unrestricted delegatecall that can lead to complete loss of control over the calling contract's state, leading to significant financial and functional damage",,Insufficient proof,Unsatisfactory,,28,:robot:_primary
validation-137,Potential Infinite Recursion Leading to Gas Exhaustion in Recursive Functions,,Insufficient proof,Unsatisfactory,,28,:robot:_primary
validation-26,Inadequate Error Handling in RLP Decoding Functions,,Insufficient proof,Unsatisfactory,,28,
validation-249,Potential Uninitialized Pointer Usage in `dict_values` Function,,No specific case when the issue would be triggered,Unsatisfactory,,29,:robot:_primary
validation-204,Lack of input validation that could lead to unwanted state changes or security vulnerabilities,,Insufficient proof,Unsatisfactory,,29,:robot:_18_group
validation-250,Incorrect Assertion on `range_check_ptr` in `decode_type_unsafe` Function,,Insufficient proof,Unsatisfactory,,30,:robot:_primary
validation-246,Memory Overwrite in ` felt_to_ascii`  due to Uninitialized Memory Allocation,,Insufficient proof,Unsatisfactory,,30,:robot:_primary
validation-203,Reentrancy leading to drainage of user funds or operation disruption,,Invalid proof,Unsatisfactory,,30,:robot:_primary
validation-80,Incorrect Stack Initialization Due to Duplicate Pointer Assignment,,Invalid proof,Unsatisfactory,,30,:robot:_primary
validation-61,Lack of Error Handling in delegatecallCairo Usage,,Error Handling is in delegatecallCairo function,Unsatisfactory,,30,:robot:_18_group
validation-55,Lack of Ethereum Address Validation in exec_balance Function,,Insufficient proof,Unsatisfactory,,30,
validation-194,Potential overflow in the function is_account_alive(),,"No realistic case the overflow would be triggered, as nonce, codelength and balance can not be so large",Unsatisfactory,,31,:robot:_primary
validation-108,Lack of a two-step process for ownership transfer,,"Design choice, not an issue",Unsatisfactory,,31,:robot:_104_group
validation-11,Missing Null Pointer Check for tx_data,,Insufficient proof,Unsatisfactory,,31,:robot:_11_group
validation-255,"Integer Overflow/Underflow can lead to loss of funds, resource exhaustion, incorrect transaction processing",,Insufficient proof,Unsatisfactory,,32,:robot:_primary
validation-130,Bypassing `assert_only_self`: Delegate Call Vulnerability and Reentrancy Risks in accounts/library.cairo Contracts,,"1. While in delegateCall, it's correct to assert with caller address rather than code address; 2. Calls to kakarot EVM are initiated from account contracts, so the caller would not 0.",Unsatisfactory,,32,:robot:_primary
validation-83,Missing Allowance Check in transferFrom Functions,,"Allowance check is not essential here, if balance is not enough, the call would revert evnetually",Unsatisfactory,,32,:robot:_37_group
validation-256,Vulnerability in Out of Gas Error Handling for Memory Operations,,Insufficient proof,Unsatisfactory,,35,:robot:_primary
validation-159,Underflow in SSTORE gas refund calculation lets users perform calls for free,,This prerequisite of current evm.gas_refund < 5000 will not be triggered,Unsatisfactory,,36,:robot:_primary
validation-70,Unchecked Return Value from fetch_balance Leading to Uninitialized Pointer Dereference,,Insufficient proof,Unsatisfactory,,36,:robot:_primary
validation-56,Incorrect Dereferencing of Pointer in _transfer_eth Function,,Insufficient proof,Unsatisfactory,,36,:robot:_106_group
validation-25,Unbounded Recursion in func decode_raw,,encoded data length is limited,Unsatisfactory,,37,
validation-169,Unchecked Return Value from dict_write in Multiple Locations,,Starknet's gas(step) cost would protect this type of attack,Unsatisfactory,,38,:robot:_primary
validation-19,Lack of Range Check for Division Operation in unsigned_div_rem(Arithmetic Overflow),,Insufficient proof,Unsatisfactory,,38,
validation-222,Potential Issues and Recommendations for First Element in `get_constructor_calldata` in Cairo Contracts,,Insufficient proof,Unsatisfactory,,39,:robot:_primary
validation-165,Inadequate Authorization in set_balance,,It's a inner function,Unsatisfactory,,40,:robot:_primary
validation-164,Unchecked selfdestruct Flag in selfdestruct Function,,It's a inner function,Unsatisfactory,,40,:robot:_16_group
validation-18,Unchecked Memory Access,,Invalid proof,Unsatisfactory,,41,:robot:_52_group
validation-171,Potential for Inconsistent Account Storage Initialization,,"Not essential, as if ans these initialization fail, the whole starknet txn would revert",Unsatisfactory,,42,:robot:_primary
validation-51,Potential Inconsistency in Code Hash Updates,,Insufficient proof,Unsatisfactory,,42,
validation-234,Lack of Replay Protection in L2 to L1 Communication Enables Message Duplication,,"Replay is not possible, as a message can only be consumed once on L1",Unsatisfactory,,43,:robot:_primary
validation-170,Missing Resource Constraints in fetch_or_create Function,,Insufficient proof,Unsatisfactory,,44,:robot:_primary
validation-104,Lack of Access Control in write_storage Function,,These are internal functions,Unsatisfactory,,44,:robot:_primary
validation-5,Lack of `{range_check_ptr}` Range Checking in the `increment_program_counter` Function of EVM Cairo Contracts,,No specific case or attck path provided on when and how this issue would be triggered,Unsatisfactory,,46,
validation-254,Inconsistent nonce handling leads to EVM equivalence issue.,,"If revert, the nonce increased on L1024; otherwise it was already increased on L959",Unsatisfactory,,48,:robot:_59_group
validation-253, Incorrect Carry Handling in `Addition ` and ` Subtraction `  Functions,,The current implementation is correct,Unsatisfactory,,48,:robot:_primary
validation-174,Ownership Takeover Due to Lack of Input Validation in transfer_ownership,,The Ownable.transfer_ownership() function has owner check  itself,Unsatisfactory,,48,:robot:_104_group
validation-146,Missing return values in IERC20.transferFrom.,,"Here it only transfers for native token, the return check is not essential",Unsatisfactory,,50,:robot:_primary
validation-141,Event length is not sufficiently validated when committing the message,,"It will not cause panic, while the emited data is long than 300, it is correctly truncated as design",Unsatisfactory,,50,:robot:_primary
validation-139,execute_starknet_call does not check if the system is paused,,"It is not essential, as the execute_starknet_call() need to be triggered by kakarot contract",Unsatisfactory,,50,:robot:_62_group
validation-78,Incorrect Array Initialization/Out-of-Bounds Memory Access Due to Pointer Reassignment and Memory Initialization,,Insufficient proof,Unsatisfactory,,50,:robot:_primary
findings-53,Malicious EVM contracts can trigger RPC-level crashes by reverting after calling DualVmToken,,The existing caller whitelist for cairo precomile calls is the reasonable design to  migrate this risk,Unsatisfactory,,54,:robot:_23_group
findings-27,Loops make CairoVM run out of steps,,It's Kakarot Relayers' responsibility to defend this type of attack by such as simulating txn before submission,Unsatisfactory,,54,:robot:_primary
validation-199,Unchecked Return Values in ERC20 and External Function Calls Could Lead to Loss of Funds and Functionality,,Insufficient proof,Unsatisfactory,,55,:robot:_primary
validation-140,execute_starknet_call allows arbitrary code execution ,,"Only the account contract self can initiate a call to this function, it's ensured by Kakarot core EVM",Unsatisfactory,,55,:robot:_62_group
validation-272,"push_uint128 does not check that element is actually < 2^128, leading to data corruption",,"No specific case provided, a check on the codebase, there is no realistic case an invalid parameter would be passed in",Unsatisfactory,,57,:robot:_primary
validation-168,Insufficient Verification in fetch_or_create,,The code size is limited while contract creation,Unsatisfactory,,57,:robot:_89_group
validation-4,Out-of-Bounds Read in Bytecode Parsing Logic,,The attack would be avoided by the check on L938-339,Unsatisfactory,,57,:robot:_27_group
findings-58,p256verify precompile charges new account access gas,,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,57,:robot:_35_group
validation-166,Absence of Reentrancy Guard in write_storage,,"inner function, not essential",Unsatisfactory,,59,:robot:_26_group
validation-151,Unverified Keccak Hash Usage in Ethereum Address Recovery May Lead to Incorrect Address Derivation,,invalid proof,Unsatisfactory,,59,:robot:_primary
validation-136,Underconstrained `execute_from_outside` Leading to Arbitrary Transaction Manipulation,,"The parsed tx_data is signed,  and the signature is checked in Account.execute_from_outside(). Though a malicious relayer might input some addtional data, but it can not change users' original intent.",Unsatisfactory,,59,:robot:_primary
validation-198,Lack of Input Validation in eth_send_raw_unsigned_tx Leading to Potential Overflow and Malleability Attacks,,Insufficient proof,Unsatisfactory,,60,:robot:_primary
validation-184,Performance Degradation Risk Due to Inefficient Memory Finalization in finalize Function,,Insufficient proof,Unsatisfactory,,60,:robot:_primary
validation-23,Potential Gas Miscalculation in `compute_message_call_gas` Function Could Lead to Insufficient Gas Allocation and Security Risks,,"No realistic case the max_allowed/gas_left would bigger than 2^128, the current implementation is safe",Unsatisfactory,,60,:robot:_04_group
validation-167,Lack of Input Validation in compute_code_hash,,"It's an inner function, the check is not essential",Unsatisfactory,,61,:robot:_10_group
findings-16,address(0) is not initially warmed up,,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,61,:robot:_primary
validation-270,High-Risk Vulnerabilities in Kakarot: Reentrancy Issues .,,These functions works as intended,Unsatisfactory,,63,:robot:_29_group
findings-28,"base fee updates implementation deviates from EIP-1559, causing fee change mid-block",,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,66,:robot:_primary
validation-147,Users can transfer ownership of the contract due to missing access control.,,The Ownable.transfer_ownership() function has owner check  itself,Unsatisfactory,,68,:robot:_primary
validation-149,Insufficient Input Validation in ec_recover Precompile Allows Malformed Input,,Insufficient quality,Unsatisfactory,,69,:robot:_80_group
validation-31,Division by Zero and Range Validation Vulnerability in unsigned_div_rem Function,,"In the audited codebase, there is no realistic case that other functions would call unsigned_div_rem() with div == 0. And if a malicious prover trys to make div == 0 by replacing hints, it just has local affect with no valid proving data produced.",Unsatisfactory,,69,:robot:_54_group
findings-33,DualVMToken::approve/transfer will always revert when trying to approve amount greater than type(uint128).max due to vulnerable implementation,,explicitly converting uint256 to uint128 would not cause overflow panic,Unsatisfactory,,69,:robot:_primary
validation-175,Front-Running Vulnerability in Account Registration,,"Frontrun attack is meaningless here, as the binding relationship between EVM address and Starknet address is fixed, thougn Alice can deploy a account contract by using Bob EVM address, but the owner of deployed account contract will always be Bob, not Alice.",Unsatisfactory,,70,:robot:_primary
validation-172,Reentrancy Attack Vulnerability,,"Not actual Reentrancy Attack avalaible, no call out existed in these cases",Unsatisfactory,,70,:robot:_26_group
validation-228,Overflow when calculating memory_expansion_cost via calculate_gas_extend_memory due to error in memory_cost function,,"The first item of the kakarot formula is not correct, which should be (x - x%512)^2/512. The current kakarot implementation is equivalent to EVM",Unsatisfactory,,71,:robot:_primary
validation-181,Incorrect Handling of Signed Integer Conversion in `pow()` Function Can Lead to Panics,,"In the PoC, the panic looks like triggered by positive_signed.try_into().unwrap() rather than the assert on the following line",Unsatisfactory,,71,:robot:_primary
validation-68,DualVmToken.sol Constructor does not Validate Starknet Compatible Addresses (DoS of ERC20 Deployment),,Admins or deployers could be trusted to pass valid constuctor parameters,Unsatisfactory,,71,:robot:_97_group
validation-183,Data Integrity Risks Due to Misaligned Memory Access in Store and Load Functions,,"EVM memory is abstract of a big bytes array, it should be able to store or load at any byte level address. The current",Unsatisfactory,,72,:robot:_primary
validation-179,Unchecked Offset in Memory Store and Load Functions Leads to Out-of-Bounds Memory Access,,Insufficient quality,Unsatisfactory,,72,:robot:_52_group
validation-49,Event Emission Limit in _emit_events,,"Design choice, not an issue",Unsatisfactory,,73,
validation-86,"The function processes messages from Layer 1 without sufficient validation, creating a potential vulnerability where an attacker could send malformed or malicious messages.",,the correctness of data sent to l1 handler is ensured by starknet OS,Unsatisfactory,,74,:robot:_44_group
validation-218,The function `ICairo1Helpers::library_call_keccak()` is not implemented.,,Implemented as cairo 1 contracts,Unsatisfactory,,75,:robot:_primary
validation-102,Reentrancy Vulnerability in Functions Modifying Account State,,Inner function,Unsatisfactory,,75,:robot:_26_group
validation-97,BlockInformation.selfbalance without calculating gas fee,,"SELFBALANCE has only const gas, which is charged in  execute_opcode()",Unsatisfactory,,75,:robot:_primary
validation-277,"""Denial of Service (DoS) Vulnerabilities in `saturated_sub`, `initialize_jumpdests`, and `try_parse_destination_from_bytes` due to Unchecked Return Values, Improper Input Validation, and Potential Infinite Loops""",,invalid proof,Unsatisfactory,,76,:robot:_primary
validation-182,Lack of Public Key Validation for secp256r1 Coordinates,,"The current implemention complys with geth, the builtin precompile ensures the r and s are valid, otherwise it returns a zero address",Unsatisfactory,,76,:robot:_primary
findings-12,Kakarot's handling of EOA validation differs from EIP-3607 requirement,,"The kakarom implementation do comply with newst geth implementation, please refer https://github.com/ethereum/go-ethereum/blob/80bdab757dfb0f6d73fb869d834979536fe474e5/core/vm/evm.go#L475-L477, and actually zero codeLength and empty code hash is same thing.",Unsatisfactory,,77,:robot:_primary
validation-116,_emit_events does not record the evm contract from which the event was issued,,L255 of evm.cairo,Unsatisfactory,,78,:robot:_primary
validation-148,Pointer Misuse in StarkNet Account Commit Function Can Lead to Memory Errors and Vulnerabilities,,the new model.Address() operation returns a pointer,Unsatisfactory,,79,:robot:_primary
validation-156, `saturated_sub` would return wrong data in some instances,,"is_nn() is used to make sure some value is in range  [0, 2^128) or not, and the use of saturated_sub() has only one occurrence, which is Helpers.saturated_sub(evm.message.env.block_number, 256), as the block_number will never realisticly above 2^128, the current usage of aturated_sub() is secure.",Unsatisfactory,,80,:robot:_primary
findings-31,Nonce will be set incorrectly due to implementation error,,"The nonce should be increased both revert or not, and it has increased on L956 if no revertion occurs",Unsatisfactory,,81,:robot:_primary
validation-196,ecrecover precompile can never be called,,"ecrecover is implemented in cairo 0 version ec_recover.cairo, and then cairo 1's recover_eth_address(), not through cairo 1 helper's exec_precompile() interface.",Unsatisfactory,,83,:robot:_primary
validation-243,Unauthorized Transaction Execution Due to Missing Account Contract Validation,,Kakarot.safe_get_evm_address() at L204 of eth_send_transaction() would enforce the correct caller,Unsatisfactory,,85,:robot:_primary
validation-95,Potential Misuse of replace_class in Upgrade Function Poses Security Risks,,Admins are trusted to call with corret parameters,Unsatisfactory,,85,:robot:_primary
validation-12,Incorrectly Skipped Memory Writes in RETURNDATACOPY,,Its not realistic that the returndata_offset would be larger than 2^128 due memory expansion cost,Unsatisfactory,,86,
findings-41,"If evm reverted, user might avoid paying any EVM gas due to vulnerable fee implementation in interpreter::execute",,"The statement on PoC step 6 is not correct, sender's balance is recovered from storage due to empty state after revert on L1021-1023",Unsatisfactory,,86,:robot:_primary
validation-158,SHA-256 precompile's price would be inefficient post EIP 7667,,"EIP7667 is still in Draft status, not suitable to include it at this stage",Unsatisfactory,,88,:robot:_primary
validation-101,Lack of Validation on Kakarot_uninitialized_account_class_hash in Starknet Deploy Function,,Admins are trusted to set valid essencial  data,Unsatisfactory,,88,:robot:_12_group
validation-135,Reentrancy Risk in eth_send_transaction and eth_call Leading to Potential Fund Draining and State Manipulation,,No specific attack path provided,Unsatisfactory,,89,:robot:_26_group
validation-197, Valid transactions like those to create contracts would always fail,,"While to address is null(length==0), current implement returns option.is_some=0, it's correct.",Unsatisfactory,,90,:robot:_primary
validation-190,`decode_1559()` does not work for transactions with fee market,,"Relayers should have splited the data and signature, refer account_contrac.execute_from_outside()",Unsatisfactory,,96,:robot:_primary
validation-123,Redeployment to the same address is impossible using `CREATE2` in the `exec_create` instruction.,,It's standard implementation since EIP 6780,Unsatisfactory,,96,:robot:_primary
validation-73,L1KakarotMessaging.sol does not Validate Starknet Compatible Address on Constructor,,Admins are trusted to provide valid parameters,Unsatisfactory,,98,:robot:_97_group
validation-252,Nonce Increment Inconsistency in Contract Creation Against Geth,,"(1)The equivalent initcode check of Ethereum is at https://github.com/ethereum/go-ethereum/blob/65e5ca7d8126f7a8c708f8affb64f16c22cc63c0/core/vm/gas_table.go#L318, which is also before increasing nonce; (2) Nonce is incremented in collision case for both geth and kakarot. Hence, in the two cases by the report, kakarot is equivalent to geth.",Unsatisfactory,,99,:robot:_primary
validation-155, `decode_2930()` does not work,,"Relayers should have splited the data and signature, refer account_contrac.execute_from_outside()",Unsatisfactory,,99,:robot:_56_group
validation-131,Inefficient Byte Encoding in L1KakarotMessaging Causes Excessive Gas Costs and Message Size,,It's the specification requirement of starknet cross chain protocol,Unsatisfactory,,100,:robot:_19_group
validation-258,Inconsistent gas refund logic comparing to geth implementation,,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,102,:robot:_primary
validation-74,msg.value stuck and unused in L1 to L2 message pipeline,,"The msg.value is used to pay for cross chain fee, not for cross chain fund bridge",Unsatisfactory,,105,:robot:_09_group
validation-189,ECADD/ECMUL's implementation deviates from Ethereum's VM,,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,110,:robot:_primary
validation-76,Critical Impact of Implementation in DualVmToken.sol's Approve Function,,"Starknet address can not call these two solidity contract approves, but call starknet version of approve and emit event on starknet OS directly",Unsatisfactory,,113,:robot:_97_group
validation-60,Underconstrained `words: Span<u8>` in `load_word` function from helpers.cairo,,"It's an inner function, it's ok to assume callers call with valid parameters ",Unsatisfactory,,114,
validation-153,Improper Input Validation in 2024-09-kakarot/kakarot-ssj/crates/contracts/src/uninitialized_account.cairo,,This file is out of  scope,Unsatisfactory,,117,:robot:_10_group
validation-127,Token transfer fails in case native token address changed.,,"The chance of native token address change is very rare, and even if it did happen, account contract and kakarot contract could be upgraded to tune with the change.",Unsatisfactory,,117,:robot:_60_group
validation-278,Underflow in charge_gas() could lead to a transaction being executed indefinitely,,"There is no realistic case the issue can be triggered, as the gas amout to subtract will not be such as a so big or negative value.",Unsatisfactory,,120,:robot:_primary
validation-229,Missing Contract Existence Checks Lead to Silent Failures in L1-L2 Communication,,precompile contracts always exist,Unsatisfactory,,121,:robot:_primary
validation-132,Flawed Byte-to-uint256 Conversion in L1KakarotMessaging Enables Cross-Layer Message Spoofing,,"The decoing of L1KakarotMessaging.consumeMessageFromL2() is matched with 
the encoding of L2KakarotMessaging.sendMessageToL1(), there is no issue here.",Unsatisfactory,,121,:robot:_primary
validation-180,Out of Bounds Read in 2024-09-kakarot/kakarot/src/kakarot/errors.cairo,,"Invalid PoC, the cairo zero not work like C",Unsatisfactory,,125,:robot:_primary
validation-77,"Issues with Address Conversion and Validation in DualVmToken.sol Contract lead to Failure in `transferFrom`, `balanceOf` and `allowance`Function",,"when a EVM address is converted into a StarkNet address, it is ensured to be little than STARKNET_FIELD_PRIME",Unsatisfactory,,128,:robot:_primary
validation-215,No overflow prevention in `interpreter::execute()` leading to attacker bypassing execution gas cost,,"calldata_gas will not realisticlly overflow, as the calulation is based on felt 252. large enough.",Unsatisfactory,,129,:robot:_32_group
validation-103,Critical Vulnerability in Owner-Controlled `prevRandao` Risks Consensus Integrity and Security,,"It's current design choice, not an issue",Unsatisfactory,,132,:robot:_98_group
validation-63,No checks for token allowance in `transferFrom` could result in user's tokens being stolen.,,The starknetToken contract would trigger rever while allowance is not enough,Unsatisfactory,,132,:robot:_primary
validation-178,Out of Bounds Write in src/utils/array.cairo,,No specific issue case provided,Unsatisfactory,,145,:robot:_51_group
validation-154,Integer Overflow in 2024-09-kakarot/kakarot-ssj/crates/contracts/src/account_contract.cairo,,this file is out of scope,Unsatisfactory,,146,:robot:_43_group
validation-122,`selfdestruct` function state modification is incorrect,,"After EIP6780, the geth doesn't clear code, the kakarot's implementation is same with it.",Unsatisfactory,,149,:robot:_primary
validation-235,Message Duplication and State Inconsistency During StarkNet Reorgs,,"No trusted source provided that the starknet OS would bridge a same L1 to L2 message multiple times on the same branch, and bridge a message to diffrent branchs would not cause issue, the short temperary branch would be reverted.",Unsatisfactory,,158,:robot:_primary
validation-271," `execute_from_outside()`  does not check if an account has been initialized, allowing an attacker to impersonate transactions from the Ethereum zero address on Kakarot.",,signatrue verification would fail if not initialized,Unsatisfactory,,160,:robot:_primary
validation-14,Consistency Issues in Error Definitions within errors.cairo Contract,,Not essential,Unsatisfactory,,164,
validation-152,Integer overflow in eth_rpc.cairo in 2024-09-kakarot/kakarot-ssj/crates/contracts/src/kakarot_core/eth_rpc.cairo,,The file is out of scope,Unsatisfactory,,166,:robot:_43_group
validation-209,`handle_l1_message` may fail to execute,,initialize function would be called indirectly during Account.deploy(),Unsatisfactory,,168,:robot:_primary
validation-82,`ECADD` Gas Cost Logic not correct with EVM Specification (kakarot-ssj) ,,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,171,:robot:_90_group
validation-81,`ECMUL` Gas Cost Logic not correct with EVM Specification (kakarot-ssj),,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,180,:robot:_90_group
findings-22,RIPEMD-160 fails when (input length & 63) is greater or equal to 55,,Dup submission of findings-35 from same warden,Unsatisfactory,,187,:robot:_01_group
validation-134,"In the case of a non-deploy transaction, the nonce of the `env.origin` EVM account does not increase.",,"The sender's nonce increases at L959, the target address should not increase except a creation txn",Unsatisfactory,,195,:robot:_primary
validation-129,Inconsistent Chain ID Calculation in Kakarot Contracts May Lead to Security and Compatibility Issues,,"The chain ID in RLP calldata is already ETH chain id, no need to apply the 53 bit shift",Unsatisfactory,,195,:robot:_primary
findings-7,Improper handling of unsupported precompiles causing full gas consumption and call failure,,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,219,:robot:_14_group
findings-17,kakarot_precompiles do not return EXCEPTIONAL_HALT for invalid / unsuccessful calls,,OOS per the contest README: EVM Gas not being equivalent to Starknet opcode pricing,Unsatisfactory,,228,:robot:_primary
findings-45,CALL_STIPEND is injected in gas left directly when a call has value,,The implementation comply with geth,Unsatisfactory,,359,:robot:_primary
validation-46,execute_starknet_call() always returns TRUE not actually checking the call result,,"If the system call failed, the whole tx woudl revert",Unsatisfactory,,28,:robot:_62_group
validation-84,Nonce is mistakenly checked against the caller address even if it's a relayer,,"caller is the starknet account contract, which is the binding and representative of the related EVM account, the EVM account's data including nonce is stored in the starkent account.",Unsatisfactory,,31,:robot:_25_group
validation-245,wrong implement of pop_n,,"statck size is ensured correct before the all of pop_n(), please check exec_opcode() function",Unsatisfactory,,34,:robot:_primary
validation-85,The origin of the transaction is set to the caller address which can be a relayer,,"relayers can not call eth_send_transaction() dirrectly, the call account_contract.execute_from_outside()",Unsatisfactory,,38,:robot:_25_group
validation-142,max_fee_per_gas is not checked to have a reasonable value potentially introducing overflow,,max_fee_per_gas is checked  at L273,Unsatisfactory,,43,:robot:_primary
validation-117,Incorrect nonce increment on transaction failure,,"If revert, the nonce increased on L1024; otherwise it was already increased on L959",Unsatisfactory,,47,:robot:_38_group
validation-106,account has Incorrect Assignment of code_hash in set_code Function Leading to Under-Constrained Computation,,"[ap_val - 2] is the return value of compute_code_hash(), which is the computed code hash",Unsatisfactory,,50,:robot:_primary
validation-89,handle_l1_message() uses invalid hard-coded parameters for execution,findings-30,dup of findings-30,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/interpreter.cairo#L950,50,:robot:_22_group
validation-143,The check for the validity of the init code is incorrect,,"is_nn() mean >= 0, not > 0",Unsatisfactory,,52,:robot:_primary
validation-69,BLOCKHASH Opcode does not comply with Kakarot spec,findings-37,dup of findings-37,Satisfactory,https://github.com/kkrt-labs/kakarot/blob/7411a5520e8a00be6f5243a50c160e66ad285563/src/kakarot/instructions/block_information.cairo#L167,54,:robot:_21_group
validation-266,Use iteration instead of recursion in the parse_storage_keys function,,https://docs.cairo-lang.org/hello_cairo/intro.html#recursion-instead-of-loops,Unsatisfactory,,55,:robot:_primary
validation-227,Karakot VM does not follow EIP-3651 making the coinbase payments more expensive for users,validation-227,The State.get_account(env.coinbase) call in interpreter.execute() before running txn warm up coinbase address,Unsatisfactory,,56,:robot:_primary
validation-92,Intrinsic gas cost is mistakenly calculated when applying access list gas costs,,"The current implementation is correct, multiple storage keys could exist under one account key. Hence, in each recursion, one account key cost add multiple storage keys cost are added to cum",Unsatisfactory,,57,:robot:_06_group
validation-125,Wrong gas price calculation in `eth_send_raw_unsigned_tx` could lead to suboptimal transaction pricing,,max_priority_fee_per_gas  is valid only when it is little than (max_fee_per_gas - base_fee),Unsatisfactory,,59,:robot:_47_group
validation-221,Transient storage is not reset at the beginning of transaction execution,,"cairoVM process only one txn each time, no need to reset Transient storage",Unsatisfactory,,62,:robot:_primary
validation-144,Gas may not fit into felt value when computing message call gas value,,L196 ensures it will not overflow,Unsatisfactory,,62,:robot:_primary
validation-100,use memory safe in byteArrayToString,,Not essential,Unsatisfactory,,62,:robot:_primary
validation-113,`selfdestruct` operation leaves contract bytecode intact,,"Since EIP6789, for contracts not created in same txn, SELFDESTRUCT does not delete any data (including storage keys, code, or the account itself)",Unsatisfactory,,63,:robot:_13_group
validation-262,Insufficient validation of items_len,,"If items_len is not equal to 6 or 9, then the assert on L68 would fail",Unsatisfactory,,67,:robot:_primary
validation-115,Incorrect stack handling for `CREATE` and `CREATE2` Opcodes in `exec_create` function,,"The current implementation is correct, please refer geth opCreate2() function",Unsatisfactory,,67,:robot:_primary
validation-212,There are no static gas costs for TLOAD / TSTORE opcodes,,Gas are charged in exec_tstore() and exec_tload(),Unsatisfactory,,73,:robot:_primary
validation-16,starknet Cairo has weak source of randomness detected in block timestamp and number,,not issue of kakarot,Unsatisfactory,,74,
validation-71,Uninitialized caller starknet aaddress after account deployment in `cairo_precompile` function,,the deploy() function would return the new starknet address at [ap - 1],Unsatisfactory,,82,:robot:_primary
validation-223,Access lists are not processed correctly according to the EIP-2929,,The State.get_account() calls in interpreter.execute() before running txn warm up from address and to address,Unsatisfactory,,84,:robot:_primary
validation-107,gas has Under-Constrained Computation in memory_cost Function,,the words length is ensured reasonable in memory_expansion_cost_saturated(),Unsatisfactory,,90,:robot:_08_group
validation-267,wrong implement of  priority_fee_per_gas,,Insufficient proof,Unsatisfactory,,113,:robot:_47_group
validation-67,L2KakarotMessaging has Unrestricted Access to sendMessageToL1 Allows Unauthorized L2 to L1 Messaging,,The msg.sender is used for the target contract on L1 to distinguish if the message is sent from trusted L2 address,Unsatisfactory,,122,:robot:_primary
validation-105,starknet has Under-Constrained Computations in Internal Function _save_valid_jumpdests,,Insufficient proof,Unsatisfactory,,125,:robot:_primary
validation-62,DualVmToken has Unsafe Delegatecall to Untrusted Contract in approve,,"The starknetToken is initialized by contract deployer, it can be trusted",Unsatisfactory,,126,:robot:_69_group
validation-66,DualVmToken has Unchecked transferFrom Allows Unauthorized Token Transfers,,no need access control,Unsatisfactory,,141,:robot:_primary
validation-65,DualVmToken has Unchecked Transfer Allows Unauthorized Token Transfers,,no need access control ,Unsatisfactory,,150,:robot:_69_group